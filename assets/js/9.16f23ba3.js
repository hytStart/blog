(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{196:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"初识cocos-creator-，做一款属于自己的小游戏"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#初识cocos-creator-，做一款属于自己的小游戏","aria-hidden":"true"}},[t._v("#")]),t._v(" 初识cocos creator ，做一款属于自己的小游戏")]),t._v(" "),s("p",[t._v("分享内容预览")]),t._v(" "),s("ul",[s("li",[t._v("小游戏体验。")]),t._v(" "),s("li",[t._v("cocos creator 前世今生。")]),t._v(" "),s("li",[t._v("基本开发环境的了解。")]),t._v(" "),s("li",[t._v("小游戏场景制作相关知识。")]),t._v(" "),s("li",[t._v("基础语法讲析。")]),t._v(" "),s("li",[t._v("sunlands-cow demo的讲解。")]),t._v(" "),s("li",[t._v("构建，发布。（h5, 微信小游戏）")])]),t._v(" "),s("p",[t._v("小游戏体验:")]),t._v(" "),s("ul",[s("li",[t._v("web 星星："),s("a",{attrs:{href:"https://hytstart.github.io/star/",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("https://hytstart.github.io/star/")]),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("h5  小牛："),s("a",{attrs:{href:"https://hytstart.github.io/cow/",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("https://hytstart.github.io/cow/")]),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"一、cocos-creator-前世今生"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、cocos-creator-前世今生","aria-hidden":"true"}},[t._v("#")]),t._v(" 一、cocos creator 前世今生")]),t._v(" "),s("blockquote",[s("p",[t._v("Q：cocos creator 是什么，能干什么？"),s("br"),t._v("\nA：cocos creator是用来做游戏的，可以打包构建到web，h5，ios，android，微信小游戏等各端平台运行。")])]),t._v(" "),s("ol",[s("li",[t._v("cocos creator是一套完整的游戏开发解决方案，包括了 cocos2d-x 引擎的 JavaScript 实现，在Cocos2d-x 基础上实现了脚本化，组件化和数据驱动等特点。")]),t._v(" "),s("li",[t._v("前世：简要介绍一下游戏引擎，Cocos2d-x。有助于了解cocos creator。")])]),t._v(" "),s("ul",[s("li",[t._v("游戏引擎：指一些已编写好的可编辑电脑游戏的系统，或者一些交互式实时图像应用程序的核心组件，目的在于让游戏设计者能容易和快速地做出游戏，而不用由零开始。简单地说，我们作为开发者，可以直接使用已经封装好的各种系统（渲染引擎， 物理引擎、碰撞检测系统等）方便开发。")]),t._v(" "),s("li",[t._v("Cocos2d-x：开源游戏引擎。可以使用 C++、Javascript 及 Lua 三种语言来进行游戏开发。")])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("今生：Cocos creator的应用范围主要包括，游戏，少儿教育等。比如大家熟知的，欢乐坦克大战，欢乐麻将。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/6/4/16b21cbfd36d0b79?w=1920&h=1080&f=jpeg&s=115926",alt:"图一 - 欢乐坦克大战"}})]),t._v(" "),s("h2",{attrs:{id:"二、基本开发环境的了解-【演示】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、基本开发环境的了解-【演示】","aria-hidden":"true"}},[t._v("#")]),t._v(" 二、基本开发环境的了解 【演示】")]),t._v(" "),s("blockquote",[s("p",[t._v("开发前的准备：组件与实体"),s("br"),t._v("\nCocos Creator 的工作流程是以组件式开发为核心的，组件式架构也称作 组件-实体系统（或 Entity-Component System），简单的说，就是以组合而不是继承的方式进行实体的构建。"),s("br"),t._v("\n参考："),s("a",{attrs:{href:"https://blog.csdn.net/i_dovelemon/article/details/25798677?tdsourcetag=s_pctim_aiomsg",target:"_blank",rel:"noopener noreferrer"}},[t._v("理解 组件-实体-系统 （ECS \\CES）游戏编程模型"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("下面新建一个cocos creator项目工程，带着大家浏览一下creator场景编辑器相关，生成的项目目录文件，最终打包编译的文件。")]),t._v(" "),s("h5",{attrs:{id:"_1-cocos-creator-游戏开发工具。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-cocos-creator-游戏开发工具。","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. Cocos Creator 游戏开发工具。")]),t._v(" "),s("ul",[s("li",[t._v("新建一个hello  world项目。重点了解资源，场景（scene）, 场景中的节点（也就是实体），节点的相关属性，组件库（组件可以挂载到节点上）。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/6/4/16b21cbfd3416b59?w=1354&h=684&f=png&s=117188",alt:"hello world dashboard"}})]),t._v(" "),s("ul",[s("li",[t._v("修改string label（数据驱动），或者脚本里的数据后预览。可以选择模拟器，也可以选择浏览器预览。最后都挂载到了canvas节点上。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/6/4/16b21cbfd3825cab?w=1326&h=714&f=png&s=80513",alt:"pre look"}})]),t._v(" "),s("blockquote",[s("p",[t._v("这里的数据驱动，是creator的变革。所有场景都会被序列化为纯数据，在运行时使用这些纯数据来重新构建场景，界面，动画甚至组件等元素。"),s("br"),t._v("\n也就是说，在编辑器中的修改，会保存为json数据，保留在版本控制中，并在运行时起作用。")])]),t._v(" "),s("h5",{attrs:{id:"_2-了解生成的项目目录文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-了解生成的项目目录文件","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 了解生成的项目目录文件")]),t._v(" "),s("p",[t._v("新建的hello world项目目录"),s("br"),t._v(" "),s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/6/4/16b21cbfd3c40ec5?w=616&h=260&f=png&s=16851",alt:"helloWrldFile"}})]),t._v(" "),s("ul",[s("li",[s("p",[t._v("assets（资源文件夹）")]),t._v(" "),s("ol",[s("li",[t._v("用来存放游戏中所有本地资源、脚本和第三方库文件。只有在 assets 目录下的内容才能显示在资源管理器中。")]),t._v(" "),s("li",[t._v("assets 中的每个文件在导入项目后都会生成一个相同名字的 .meta 文件，.meta 文件相当于引擎识别图片的身份证， 以及编辑器中设置的相关配置。")]),t._v(" "),s("li",[t._v("版本控制。  √")])])]),t._v(" "),s("li",[s("p",[t._v("library（资源库）")]),t._v(" "),s("ol",[s("li",[t._v("这里文件的结构和资源的格式将被处理成最终游戏发布时需要的形式。也就是预览中用到的资源。")]),t._v(" "),s("li",[t._v("不需要进入版本控制，每次打开这个项目都会生成。  ×")])])]),t._v(" "),s("li",[s("p",[t._v("settings（项目设置）")]),t._v(" "),s("ol",[s("li",[t._v("项目相关的设置，如 构建发布 菜单里的包名、场景和平台选择等。")]),t._v(" "),s("li",[t._v("加入版本控制。  √")])])]),t._v(" "),s("li",[s("p",[t._v("project.json")]),t._v(" "),s("ol",[s("li",[t._v("cocos cretor识别项目的合法性标志，用来规定当前使用的引擎类型和插件存储位置。有了project.json和assets才能打开项目。")]),t._v(" "),s("li",[t._v("版本控制。  √")])])]),t._v(" "),s("li",[s("p",[t._v("bulid（构建目录）")]),t._v(" "),s("ol",[s("li",[t._v("打包编译完的目录。")]),t._v(" "),s("li",[t._v("版本控制。 ×")])])])]),t._v(" "),s("h5",{attrs:{id:"_3-编译后的文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-编译后的文件","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. 编译后的文件")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/6/4/16b21cbfd3967380?w=834&h=316&f=png&s=18832",alt:"helloWrldFileBuild"}})]),t._v(" "),s("ul",[s("li",[t._v("index.html，main.js 初始化相关，包括生成canvas根节点相关等。")]),t._v(" "),s("li",[t._v("res，记录文件的结构，和资源。")]),t._v(" "),s("li",[t._v("src，project.js（代码相关），setting.js（项目相关设置）")])]),t._v(" "),s("h2",{attrs:{id:"三、-小游戏场景制作相关知识。【对上一节的具体阐述】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、-小游戏场景制作相关知识。【对上一节的具体阐述】","aria-hidden":"true"}},[t._v("#")]),t._v(" 三、 小游戏场景制作相关知识。【对上一节的具体阐述】")]),t._v(" "),s("p",[t._v("在 Cocos Creator 中，游戏场景（Scene）是开发时组织游戏内容的中心，也是呈现给玩家所有游戏内容的载体。游戏场景中一般会包括以下内容：")]),t._v(" "),s("ul",[s("li",[t._v("场景图像和文字（Sprite，Label）")]),t._v(" "),s("li",[t._v("角色")]),t._v(" "),s("li",[t._v("以组件形式附加在场景节点上的游戏逻辑脚本")])]),t._v(" "),s("p",[t._v("当玩家运行游戏时，就会载入游戏场景，游戏场景加载后就会自动运行所包含组件的游戏脚本，实现各种各样开发者设置的逻辑功能。所以除了资源以外，游戏场景是一切内容创作的基础。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/6/4/16b21cbfd37d7620?w=807&h=529&f=png&s=44159",alt:"scene"}})]),t._v(" "),s("h5",{attrs:{id:"_1-以组件形式，附加在场景节点上。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-以组件形式，附加在场景节点上。","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 以组件形式，附加在场景节点上。")]),t._v(" "),s("ul",[s("li",[t._v("如上面描述内容，Cocos Creator 的组件式结构，工作流程是以组件式开发为核心的。")]),t._v(" "),s("li",[t._v("节点（Node）是承载组件的实体，通过将具有各种功能的 组件（Component）挂载到节点上，来让节点具有各式各样的表现和功能（注：一个节点上可以挂载多个组件，但是，一个节点上只能添加一个渲染组件，渲染组件包括 Sprite， Label，Particle等）。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/6/4/16b21cc0cc9ec199?w=922&h=636&f=png&s=5100",alt:"nodetree"}})]),t._v(" "),s("p",[t._v("举个例子，下图中，是在我们的hello world的工程中的节点（实体），node属性（Node 标题开始的部分就是节点的属性），组件及组件属性。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/6/4/16b21ccfde702772?w=1357&h=679&f=png&s=111628",alt:"nodetree"}})]),t._v(" "),s("ul",[s("li",[t._v("node属性包括了节点的位置、旋转、缩放、尺寸等变换信息和锚点、颜色、不透明度等其他信息。")]),t._v(" "),s("li",[t._v("组件属性，可以用来渲染图片，渲染文字，执行js脚本等，也就是经常用的的渲染组件，脚本组件。")])]),t._v(" "),s("p",[t._v("节点、node属性、组件的关系也就是：节点的显示，是根据node属性调整（放大，缩小等）以及组件渲染共同决定的。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/6/4/16b21cc0606cce2c?w=600&h=465&f=png&s=42173",alt:"image"}})]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("接下来具体介绍node属性以及组件相关。")]),t._v(" "),s("h5",{attrs:{id:"_2-节点（node）属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-节点（node）属性","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 节点（node）属性")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/6/4/16b21cc149d9b560?w=326&h=294&f=png&s=12581",alt:"image"}})]),t._v(" "),s("p",[t._v("重点介绍rotation，anchor, position。")]),t._v(" "),s("ul",[s("li",[t._v("rotation，逆时针旋转。")]),t._v(" "),s("li",[t._v("anchor，锚点。决定了节点以自身约束框中的哪一个点作为整个节点的位置。我们选中节点后看到变换工具出现的位置就是节点的锚点位置。creator都是默认锚点是（0.5， 0.5）。")]),t._v(" "),s("li",[t._v("position，节点的位置，相对于父节点而言的。先来看一下creator中的坐标系。")])]),t._v(" "),s("h6",{attrs:{id:"坐标系："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#坐标系：","aria-hidden":"true"}},[t._v("#")]),t._v(" 坐标系：")]),t._v(" "),s("ul",[s("li",[t._v("世界坐标系（绝对坐标系）： Cocos Creator 游戏开发中表示场景空间内的统一坐标体系。")]),t._v(" "),s("li",[t._v("本地坐标系（相对坐标系）：是和节点相关联的坐标系。每个节点都有独立的坐标系。\n也就是说，我们在项目开发设置中，父子关系的层级结构，修改节点的 位置（Position） 属性，此时设定的节点位置是该节点相对于父节点的 本地坐标系，而非世界坐标系。最后在绘制整个场景时，Cocos Creator 会把这些节点的本地坐标映射成世界坐标系坐标。")])]),t._v(" "),s("p",[t._v("举个例子： 所有子节点都是以 父亲锚点所在位置 作为坐标系原点，只用顾及到内部就可以。比如英雄的移动，移动整个父亲就行，里面的血条，任务都跟着移动，相对于父亲的节点坐标是不变的。")]),t._v(" "),s("h5",{attrs:{id:"_3-常用组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-常用组件","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. 常用组件")]),t._v(" "),s("blockquote",[s("p",[t._v("sprite组件，label组件，button组件，代码组件")])]),t._v(" "),s("h6",{attrs:{id:"_3-1-sprite（精灵组件），游戏中最常见的显示图像的方式。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-sprite（精灵组件），游戏中最常见的显示图像的方式。","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.1 sprite（精灵组件），游戏中最常见的显示图像的方式。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/6/4/16b21cc161f15961?w=332&h=401&f=png&s=21796",alt:"sprite组件"}})]),t._v(" "),s("ul",[s("li",[t._v("Sprite Frame： 图片资源。")]),t._v(" "),s("li",[t._v("Size Mode: 指定 Sprite 的尺寸。（trimmed 表示会使用原始图片资源裁剪透明像素后的尺寸；Raw 表示会使用原始图片未经裁剪的尺寸；Custom 表示会使用自定义尺寸）。")]),t._v(" "),s("li",[t._v("Type: 渲染模式，包括普通（Simple）、九宫格（Sliced）、平铺（Tiled）、填充（Filled）和网格（Mesh）渲染五种模式。")])]),t._v(" "),s("p",[t._v("重点了解：Type模式，在我们的使用过程中，应用广泛。可以让我们处理起图像来更加方便。")]),t._v(" "),s("blockquote",[s("p",[t._v("九宫格（sliced）。图像将被分割成九宫格，并按照一定规则进行缩放以适应可随意设置的尺寸(size)。通常用于 UI 元素，或将可以无限放大而不影响图像质量的图片制作成九宫格图来节省游戏资源空间。"),s("br"),t._v("\n例如： 圆角的图形，只拉伸中间部分就可以。（聊天气泡）")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/6/4/16b21cc188bdeed2?w=466&h=192&f=png&s=12021",alt:"气泡"}})]),t._v(" "),s("blockquote",[s("p",[t._v("填充模式（filled）。根据原点，以及设置的填充类型。可以按照比例，方向绘画出整个图像。"),s("br"),t._v("\n填充类型：HORIZONTAL（横向填充）、VERTICAL（纵向填充）和 RADIAL （扇形填充）三种。"),s("br"),t._v("\n横向填充： 进度条的展示。扇形填充： 技能cd小图标。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/6/4/16b21cc1a3bfaf70?w=332&h=266&f=png&s=14674",alt:"fill填充模式"}})]),t._v(" "),s("h6",{attrs:{id:"_3-2-label组件。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-label组件。","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.2 label组件。")]),t._v(" "),s("p",[t._v("显示文字，文字可以是系统字体，TrueType 字体或者 BMFont 字体和艺术数字。更改font属性就可以。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/6/4/16b21cc1a7886bea?w=330&h=477&f=png&s=21241",alt:"font"}})]),t._v(" "),s("h6",{attrs:{id:"_3-3-button组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-button组件","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.3 button组件")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/6/4/16b21cc1b0d55342?w=326&h=385&f=png&s=21520",alt:"font"}})]),t._v(" "),s("ul",[s("li",[t._v("Transition： Button 在各个状态下（normal，pressed，hover，disabled）的 SpriteFrame。比如按钮的点击。")]),t._v(" "),s("li",[t._v("click Events：点击事件。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/6/4/16b21cc1d7c5d5f2?w=339&h=115&f=png&s=6169",alt:"image"}})]),t._v(" "),s("p",[t._v("Target： 带有脚本组件的节点。"),s("br"),t._v("\nComponent： 脚本组件名称。"),s("br"),t._v("\nHandler： 指定一个回调函数，当用户点击 Button 并释放时会触发此函数。"),s("br"),t._v("\nCustomEventData： 用户指定任意的字符串作为事件回调的最后一个参数传入。")]),t._v(" "),s("h6",{attrs:{id:"_4-脚本组件。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-脚本组件。","aria-hidden":"true"}},[t._v("#")]),t._v(" 4. 脚本组件。")]),t._v(" "),s("p",[t._v("开发者可以为节点添加脚本组件。在脚本组件中，可以获取各个节点，控制节点做一些游戏上的变化。下面一节仔细阐述。")]),t._v(" "),s("h2",{attrs:{id:"四、基础语法讲析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、基础语法讲析","aria-hidden":"true"}},[t._v("#")]),t._v(" 四、基础语法讲析")]),t._v(" "),s("p",[t._v("打开新建的hello world脚本组件的 js文件。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("cc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    properties"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        label"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Label\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// defaults, set visually when attaching this script to the Canvas")]),t._v("\n        text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello, World!'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// use this for initialization")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onLoad")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("label"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("string "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// called every frame")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("update")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("dt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h6",{attrs:{id:"_1-cc-class"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-cc-class","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. cc.Class")]),t._v(" "),s("p",[t._v("class() 是 cc 模块下的一个方法，这个方法用于声明 Cocos Creator 中的类。返回一个构造函数。在creator编辑器中，添加用户脚本组件，相当于"),s("code",[t._v("new")]),t._v("这个构造函数，也就是添加的实例。")]),t._v(" "),s("h6",{attrs:{id:"_2-properties-，节点自定义属性。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-properties-，节点自定义属性。","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. properties: {}，节点自定义属性。")]),t._v(" "),s("p",[t._v("既可以定义节点的位置，颜色，大小等属性（系统），也可以定义为自己编写的组件类型。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 例如：套牛小游戏。更换牛的种类，以及切换背景图。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 抛出去的脚本组件中，cowSkinType属性，是一个数组，用来表示牛的种类。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. 他的类型就是一个自定义的cowSkin的组件。cowSkin组件的属性是一个数组，类型是cc.SpriteFrame，可以实现背景图更换，引起牛的视觉上跑动。")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" cowSkinComponent "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cowSkin'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    properties"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        cowAnimate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SpriteFrame"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ncc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    properties"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        cowSkinType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cowSkinComponent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h6",{attrs:{id:"_3-生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-生命周期","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. 生命周期")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("onload")]),t._v("，节点首次激活时触发，比如所在的场景被载入，或者所在节点被激活的情况下。注意，此时场景的节点和数据都已经准备好了。")]),t._v(" "),s("li",[s("code",[t._v("start")]),t._v("，通常用于初始化一些中间状态的数据，这些数据可能在 update 时会发生改变。在onload之后执行。")]),t._v(" "),s("li",[s("code",[t._v("update")]),t._v("，每一帧(1s / 帧数)渲染前更新物体的行为，状态和方位。")]),t._v(" "),s("li",[s("code",[t._v("onEnable")]),t._v(", "),s("code",[t._v("onDisable")]),t._v(", "),s("code",[t._v("lateUpdate")]),t._v(", "),s("code",[t._v("onDestroy")]),t._v("不常用。")])]),t._v(" "),s("h6",{attrs:{id:"_4-this-node，脚本组件所属的节点实例。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-this-node，脚本组件所属的节点实例。","aria-hidden":"true"}},[t._v("#")]),t._v(" 4. this.node，脚本组件所属的节点实例。")]),t._v(" "),s("p",[s("code",[t._v("this")]),t._v("，指向"),s("code",[t._v("new")]),t._v("出来的组件实例。"),s("br"),t._v(" "),s("code",[t._v("this.node")]),t._v("，组件所属的节点。可以在该节点下改变node属性，也可以找到各个组件，改变组件的属性。")]),t._v(" "),s("h6",{attrs:{id:"_5-访问节点和组件。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-访问节点和组件。","aria-hidden":"true"}},[t._v("#")]),t._v(" 5. 访问节点和组件。")]),t._v(" "),s("ul",[s("li",[t._v("使用"),s("code",[t._v("getComponent")]),t._v("方法，寻找节点上的组件。")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("start: function () {\n    cc.log( this.node.getComponent(cc.Label) === this.getComponent(cc.Label) );  // true\n}\n")])])]),s("ul",[s("li",[t._v("也可以在该脚本中设置一个属性，类型为其他组件，然后将要使用的B组件，拖入到A的属性检查器中。然后就可以直接在this中拿到这个组件。")]),t._v(" "),s("li",[t._v("查找子节点。")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// 所有子节点\nconst children = this.node.children\n// 根据name查找单个子节点\nlet child = this.node.getChildByName('cow')\n// 根据路径查找子节点，适合子节点层级比较深的情况。\nchild = cc.find('Canvas/score/val'， this.node)\n")])])]),s("ul",[s("li",[t._v("全局查找节点。")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("this.time = cc.find('Canvas/time/tiemLabel')\n")])])]),s("h6",{attrs:{id:"_6-常用节点和组件接口属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-常用节点和组件接口属性","aria-hidden":"true"}},[t._v("#")]),t._v(" 6. 常用节点和组件接口属性")]),t._v(" "),s("ul",[s("li",[t._v("访问，改变节点属性")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("start () {\n    // 激活，关闭节点\n    this.node.active = false\n    // // 更改节点位置\n    this.node.x = 120\n    this.node.y = 320\n    this.node.position = cc.v2(100, 50)\n    // // 节点旋转\n    this.node.rotation = 90\n    this.node.setScale(2, 2)\n    // // 更改节点尺寸\n    this.node.width = 100\n    this.node.height = 100\n    // // 更改颜色\n    this.node.color = cc.Color.RED\n},\n")])])]),s("ul",[s("li",[t._v("创建，复制，销毁节点")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const node1 = cc.instantiate(cc.Node); // 克隆节点。\nconst node2 = cc.instantiate(cc.Prefab) // 复制预制节点。（比如，重复生成的牛）\ncc.Node.destroy() // 销毁节点\n")])])]),s("p",[t._v("这里要说一下，预制资源（预制节点）。预制资源cc.Prefab，适用于\n通用性强、重复使用的且个体之间存异较少时。"),s("br"),t._v("\n创建Prefab很简单，在层级管理器视图创建的任意节点->拖动到->资源管理器视图即可完成创建。")]),t._v(" "),s("ul",[s("li",[t._v("节点事件 （系统内置的，自定义）")])]),t._v(" "),s("blockquote",[s("p",[t._v("节点系统事件：鼠标，触摸，"),s("br"),t._v("\n全局系统事件：键盘，重力传感")])]),t._v(" "),s("p",[t._v("（1）鼠标事件：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// 使用枚举类型来注册\nthis.node.on(cc.Node.EventType.MOUSE_DOWN, function (event) {\n  console.log('Mouse down');\n}, this);\n\n// 使用事件名来注册\nthis.node.on('mousedown', function (event) {\n  console.log('Mouse down');\n}, this);\n")])])]),s("p",[t._v("触摸事件同上，"),s("code",[t._v("touchstart")]),t._v(", "),s("code",[t._v("touchmove")]),t._v(","),s("code",[t._v("touchend")]),t._v(","),s("code",[t._v("touchcancel")]),t._v("。"),s("br"),t._v(" "),s("code",[t._v("event")]),t._v(" 给我们提供了很多的api，帮助我们获取位置相关信息。例如，"),s("code",[t._v("touchmove")]),t._v("中，可以根据"),s("code",[t._v("getDelta")]),t._v("，获取触点距离上一次时间移动的距离对象。在飞机大战中适用。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(" this.node.on('touchmove', (e) => {\n    const delta = e.getDelta()\n    const {x, y}= delta\n    this.node.x += x\n    this.node.y += y\n})\n")])])]),s("p",[t._v("（2）键盘事件")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("onLoad () {\n    cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this)\n},\nonKeyDown(event) {\n    const { KEY } = cc.macro\n    switch (event.keyCode) {\n        case KEY.a:\n            console.log(event.keyCode)\n            console.log(KEY.a)\n            console.log('aaaaaaaaa')\n            break;\n        case 'b':\n            console.log('bbbbbb')\n            break;\n        default:\n            break;\n    }\n},\n")])])]),s("p",[t._v("输出结果："),s("br"),t._v("\n一开始以为就是简单的字符串对应关系，通过console发现不是。bbbb是输出不了的。")]),t._v(" "),s("p",[t._v("（3）自定义事件")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// 发送事件\nthis.node.emit()\nthis.node.dispatchEvent() // 事件派送，冒泡，可以跨节点\n// 监听\nthis.node.on()\n// 取消监听\nthis.node.off()\n")])])]),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/6/4/16b21cc1f0bb1629?w=192&h=61&f=png&s=2695",alt:"keyconsole"}})]),t._v(" "),s("ul",[s("li",[t._v("action，节点动作")])]),t._v(" "),s("p",[t._v("（1）声明一个动作类型，运行这个动作。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const action = cc.moveTo(2, 20, 300)\nthis.node.runAction(action)\n// 停止一个动作\nthis.node.stopAction(action);\n// 停止所有动作\nthis.node.stopAllActions();\n")])])]),s("p",[t._v("（2）一些常用动作。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const a1 = cc.scaleTo(1, 30)\nconst a2 = cc.fadeIn(2)\n")])])]),s("p",[t._v("动作列表："),s("a",{attrs:{href:"https://docs.cocos.com/creator/manual/zh/scripting/action-list.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("click me"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("（3）容器动作，让每个动作组合起来运动。"),s("code",[t._v("cc.sequence")]),t._v("（顺序）, "),s("code",[t._v("cc.spawn")]),t._v("（同步）， "),s("code",[t._v("cc.repeat")]),t._v("（重复一次）, "),s("code",[t._v("cc,repeatForever")]),t._v("（永久重复）。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// sequence, spawn\nconst ac1 = cc.moveTo(2, 50, -130)\nconst ac2 = cc.scaleTo(1, 4, 4)\nconst ac3 = cc.rotateTo(2, 90)\nconst sq = cc.sequence(ac1, ac2, ac3)\nthis.node.runAction(sq)\n\n// repeat, repeatForever\nconst ac1 = cc.moveBy(2, 50, -130)\nconst ac2 = cc.scaleBy(1, 4, 4)\nconst ac3 = cc.rotateBy(2, 90)\nconst sq = cc.sequence(ac1, ac2, ac3)\nconst rep = cc.repeat(sq, 4)\nthis.node.runAction(rep)\n")])])]),s("p",[t._v("（4）动作回调，可以在这里处理一些逻辑。比如运动中的节点，判断是否碰到物体。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const action = cc.moveTo(5, 20, 300)\nconst finished1 = cc.callFunc(() => {\n    // 比如套牛游戏中，判断牛的位置，是否符合绳子套牛的范围\n    console.log(1111111111111111)\n})\nconst ac2 = cc.moveTo(8, 333, 4444)\nconst end = cc.callFunc(() => {\n    console.log(222222222222222)\n})\nconst myAction = cc.sequence(action, finished1, ac2, end);\nthis.node.runAction(myAction)\n")])])]),s("p",[t._v("（5）"),s("code",[t._v("cc.delayTime(4)")]),t._v("延迟，搭配动作使用。比如说，暴出装备消失。")]),t._v(" "),s("p",[t._v("（6）缓动动作。")]),t._v(" "),s("blockquote",[s("p",[t._v("缓动动作不可以单独存在，它永远是为了修饰基础动作而存在的，它可以用来修改基础动作的时间曲线，让动作有快入、缓入、快出或其它更复杂的特效。需要注意的是，只有时间间隔动作才支持缓动。")])]),t._v(" "),s("p",[t._v("和css3 的 animation-timing-function速度曲线相似")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// 节点旋转，慢慢变慢\nconst action = cc.rotateBy(3, 360)\nconst doAction = action.easing(cc.easeCubicActionOut())\nconst repAction = doAction.repeatForever(doAction)\nthis.node.runAction(repAction)\n")])])]),s("ul",[s("li",[t._v("场景的跳转")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('// 场景切换\ncc.director.loadScene("test")\n')])])]),s("h6",{attrs:{id:"_7-计时器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-计时器","aria-hidden":"true"}},[t._v("#")]),t._v(" 7. 计时器")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("scheduleOnce")]),t._v(" 一次")]),t._v(" "),s("li",[s("code",[t._v("schedule")]),t._v(" （回调函数，间隔，重复次数，延迟）")]),t._v(" "),s("li",[s("code",[t._v("unschedule")]),t._v(" 取消一个计时器")]),t._v(" "),s("li",[s("code",[t._v("unscheduleAllCallbacks")]),t._v(" 取消该组件的所有计时器")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("this.scheduleOnce(() => {\n    console.log('scheduleOnce')\n}, 2)\n\nconst interval = 4\nconst repeat = 3\nconst delay = 4\nthis.callBack = () => {\n    console.log('schedule')\n    this.unschedule(this.callBack)\n    this.unscheduleAllCallbacks()\n}\nthis.scheduleOnce(this.callBack, interval, repeat, delay)\n")])])]),s("p",[t._v("如果使用"),s("code",[t._v("schedule")]),t._v("，永久重复，可以使用"),s("code",[t._v("cc.macro.REPEAT_FOREVER")]),t._v("，或者默认不写。")]),t._v(" "),s("h6",{attrs:{id:"_8-ajax请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-ajax请求","aria-hidden":"true"}},[t._v("#")]),t._v(" 8. ajax请求")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// xhr\n// 可以直接使用 new XMLHttpRequest() 来创建一个连接对象，也可以通过 cc.loader.getXMLHttpRequest() 来创建，两者效果一致\nconst url = 'https://easy-mock.com/mock/5cf0b076d205e36f67612985/test/testXhr'\nvar xhr = new XMLHttpRequest();\nxhr.onreadystatechange = function () {\n    if (xhr.readyState == 4 && (xhr.status >= 200 && xhr.status < 400)) {\n        var response = xhr.responseText;\n        console.log('response', response);\n    }\n};\nxhr.open(\"GET\", url, true);\nxhr.send();\n")])])]),s("h2",{attrs:{id:"五、sunlands-cow-demo的讲解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#五、sunlands-cow-demo的讲解","aria-hidden":"true"}},[t._v("#")]),t._v(" 五、sunlands-cow demo的讲解")]),t._v(" "),s("p",[t._v("体验地址: "),s("a",{attrs:{href:"https://hytstart.github.io/cow/",target:"_blank",rel:"noopener noreferrer"}},[t._v("建议移动端访问"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/6/4/16b21cc21f811998?w=320&h=566&f=jpeg&s=30109",alt:"cowDemo"}})]),t._v(" "),s("p",[t._v("开始之前，先来梳理一下流程：")]),t._v(" "),s("ul",[s("li",[t._v("搭建基本场景")]),t._v(" "),s("li",[t._v("奔跑的牛")]),t._v(" "),s("li",[t._v("可以套牛的绳子（运动）")]),t._v(" "),s("li",[t._v("套牛成功的判定。")]),t._v(" "),s("li",[t._v("结算（加分，倒计时），游戏流程控制（重新开始，结束）")]),t._v(" "),s("li",[t._v("添加背景音乐，套牛中了声音提示，粒子动画")])]),t._v(" "),s("hr"),t._v(" "),s("h6",{attrs:{id:"_1-搭建基本场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-搭建基本场景","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 搭建基本场景")]),t._v(" "),s("p",[t._v("注意："),s("br"),t._v("\n（1）修改根节点Canvas高度，适用于手机。"),s("br"),t._v("\n（2）插入相关节点，这里注意button的属性。button是个按钮组件，需要添加出sprite组件以外，应该添加个button组件，用来控制点击。其中，触摸按钮的变化，button的ransition属性是我们上文提到的重点。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/6/4/16b21cc2a087fb03?w=325&h=445&f=png&s=21257",alt:"cowBtn"}})]),t._v(" "),s("h6",{attrs:{id:"_2-奔跑的牛的制作（三种牛，每种牛三个）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-奔跑的牛的制作（三种牛，每种牛三个）","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 奔跑的牛的制作（三种牛，每种牛三个）")]),t._v(" "),s("blockquote",[s("p",[t._v("牛需要随机出现，而且要移动。那么我们可以做一个牛的预制体。每次产生时，克隆这个预制体即可。")])]),t._v(" "),s("p",[t._v("（1）生成三个随机的，并且是移动的牛。维护一个二维数组来控制。映射到我们的组件上也就是这里用到了自定义组件，自定义类型。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// cowSkinType属性，是一个数组，用来表示牛的种类。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 他的类型就是一个自定义的cowSkin的组件。cowSkin组件的属性是一个数组，类型是cc.SpriteFrame，可以实现背景图更换，引起牛的视觉上跑动。")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" cowSkinComponent "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cowSkin'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    properties"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        cowAnimate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SpriteFrame"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ncc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    properties"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        cowSkinType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cowSkinComponent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("在编辑器中，cow组件的每个属性，sprite frame对应着不同的动作的牛。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/6/4/16b21cc251080a3d?w=313&h=609&f=png&s=28712",alt:"cowAct"}})]),t._v(" "),s("p",[t._v("（2）让牛本身动作运动起来，通过切换背景图片")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("onLoad () {\n    //随机生成牛\n    this.cowType = Math.floor(Math.random() * 3)\n    // 以及 牛的背景更换\n    this.cowShow = this.node.getComponent(cc.Sprite)\n},\n\ncowPlay(dt) {\n    // 牛的背景更换\n    this.playTime += dt\n\n    let index = Math.floor(this.playTime / this.duration) // 向下取整数\n\n    if (index >= this.cowAniArray.length) {\n        index = 0\n        this.playTime -= (this.duration * this.cowAniArray.length) // 接着上面的时间结算\n    }\n    \n    //  在合法的范围之内\n    this.cowShow.spriteFrame = this.cowAniArray[index]\n},\n")])])]),s("p",[t._v("（3）牛的移动，在"),s("code",[t._v("update")]),t._v("函数中，每帧 * 速度 - 偏移量。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// 初始化速度\nthis.cowSpeed = -(Math.random() * 300 + 200)\n\nupdate (dt) {\n    const s = this.cowSpeed * dt\n    this.node.x += s\n}\n")])])]),s("p",[t._v("（4）牛基本制作完了，我们要想重复利用cow这个组件，把他转化为prefab预制体，每次生成新的牛的时候，克隆预制体，就可以生成一个牛。")]),t._v(" "),s("ul",[s("li",[t._v("制作一个预制体。在Canvas节点添加属性，牛的预制体，cowPrefab。把预制体拖入到  cowPrefab 属性中。")]),t._v(" "),s("li",[t._v("游戏开始的时候，克隆预制体，生成牛。")]),t._v(" "),s("li",[t._v("生成牛以后，每隔一段事件，在调用生成牛的函数，生成一个新的牛。")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("generatCow() {\n    const newCow = cc.instantiate(this.cowPrefab)\n    this.node.addChild(newCow)\n    newCow.active = true\n    newCow.setPosition(this.cowPosition.x, this.cowPosition.y)\n\n    // 调用自己生成牛\n    this.scheduleOnce(this.generatCow.bind(this), Math.random() * 3 + 2)\n},\n\nstartGame() {\n    if (!this.isStart) {\n        this.isStart = true\n\n        // 生成牛之前，先把所有的计时器取消\n        this.unscheduleAllCallbacks()\n        this.generatCow()\n    }\n},\n\nonLoad () {\n    // 预制体牛的位置\n    this.cowPosition = {\n        x: 520,\n        y: -120,\n    }\n    // 游戏是否开始\n    this.isStart = false\n\n    this.startGame()\n},\n")])])]),s("h6",{attrs:{id:"_3-可以套牛的绳子。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-可以套牛的绳子。","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. 可以套牛的绳子。")]),t._v(" "),s("ul",[s("li",[t._v("绳子可以运动，")]),t._v(" "),s("li",[t._v("把运动事件，添加给button按钮。")]),t._v(" "),s("li",[t._v("套到牛以后，套到的是哪种牛，还要换成不同牛的背景图。最后套完，恢复默认绳子。")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// 初步的绳子套牛动作衔接\nshootRopeOut() {\n    if (this.isShooting) return\n    this.isShooting = true\n    const aniOut = cc.moveTo(0.5, 0, -60)\n    const aniIn = cc.moveTo(0.5, 0, -550)\n    const endFn = cc.callFunc(() => {\n        this.setRopeEmpty()\n        this.isShooting = false\n    }, this.node)\n    const seq = cc.sequence([aniOut,  aniIn, endFn])\n    this.node.runAction(seq)\n},\n")])])]),s("h6",{attrs:{id:"_4-套牛成功的判定。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-套牛成功的判定。","aria-hidden":"true"}},[t._v("#")]),t._v(" 4. 套牛成功的判定。")]),t._v(" "),s("ul",[s("li",[t._v("每次"),s("code",[t._v("generateCow")]),t._v("生成牛，保存起来。牛出了画面，从数组中清空。")]),t._v(" "),s("li",[t._v("当绳子，扔出去的时候。判断数组中的牛的位置，是否在绳子预先设定的范围内。如果是的话，需要取到当前牛的种类，并且从数组、节点中移除。")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// 拿到现在牛的类型\nhitCow() {\n    let cowType = -1\n    for(let i = 0; i < this.cowGet.length; i++) {\n        if (this.cowGet[i].x >= 70 && this.cowGet[i].x <= 190) {\n            // cow节点对应的代码组件中的cowType属性\n            cowType = this.cowGet[i].getComponent('cow').cowType\n            this.cowGet[i].removeFromParent()\n            this.cowGet.splice(i, 1)\n            return cowType\n        }\n    }\n    return -1\n},\n\n// 上面（3.套牛动作衔接）中，再加入绳子套到牛，背景图的改变\nconst getCow = cc.callFunc(() => {\n    const cowType = this.gameScene.hitCow()\n    if (cowType >= 0 && cowType <= 2) {\n        this.node.y = 42\n        this.setRopeCow(cowType)\n    }\n}, this.node)\nconst seq = cc.sequence([aniOut, getCow, aniIn, endFn])\n")])])]),s("h6",{attrs:{id:"_5-结算（加分，倒计时），游戏流程控制（重新开始，结束）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-结算（加分，倒计时），游戏流程控制（重新开始，结束）","aria-hidden":"true"}},[t._v("#")]),t._v(" 5. 结算（加分，倒计时），游戏流程控制（重新开始，结束）")]),t._v(" "),s("ul",[s("li",[t._v("只需设置固定时间倒计时，时间结束时，不再生成新的牛。并且弹出相应的结算面板。")]),t._v(" "),s("li",[t._v("rePlay按钮，只需把最开始脚本中"),s("code",[t._v("startGame")]),t._v("事件绑定到该按钮的点击事件上。")])]),t._v(" "),s("p",[t._v("注意：mask蒙层面板，需要添加一个button。拦下用户点击行为对于套绳按钮的影响。就是不能在点击套绳按钮了。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/6/4/16b21cc26f80a29d?w=583&h=603&f=png&s=238153",alt:"cowAct"}})]),t._v(" "),s("h6",{attrs:{id:"_6-添加音乐，特效"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-添加音乐，特效","aria-hidden":"true"}},[t._v("#")]),t._v(" 6. 添加音乐，特效")]),t._v(" "),s("p",[t._v("绳子套到牛，加上音乐和粒子特效的提示。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("cc.loader.loadRes('mou', cc.AudioClip, function (err, clip) {\n    cc.audioEngine.play(clip);\n});\n")])])]),s("p",[t._v("注意：这里的音乐资源，需要放在resources目录下，否则不会被加载。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/6/4/16b21cc2bb3e219b?w=608&h=292&f=png&s=24149",alt:"cowAct"}})]),t._v(" "),s("h6",{attrs:{id:"_7-优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-优化","aria-hidden":"true"}},[t._v("#")]),t._v(" 7. 优化")]),t._v(" "),s("ul",[s("li",[t._v("creator节点的层级问题：新生成的牛层级会在绳子上面，所以我们需要给绳子，套绳按钮和最后的结算面板提高层级。")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const rope = this.node.getChildByName('rope')\nrope.zIndex = 1000\nconst startBtn = this.node.getChildByName('startBtn')\nstartBtn.zIndex = 2000\nthis.check = cc.find('Canvas/check')\nthis.check.zIndex = 3000\n")])])]),s("ul",[s("li",[t._v("源码可戳 -> "),s("a",{attrs:{href:"https://github.com/hytStart/cocos-creator-cow",target:"_blank",rel:"noopener noreferrer"}},[t._v("cocos-creator-sunlandsCow"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("......")])]),t._v(" "),s("h2",{attrs:{id:"六、构建，发布。（h5-微信小游戏）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#六、构建，发布。（h5-微信小游戏）","aria-hidden":"true"}},[t._v("#")]),t._v(" 六、构建，发布。（h5, 微信小游戏）")]),t._v(" "),s("h6",{attrs:{id:"_1-构建为h5。只需将生成后的文件，放在我们的静态资源服务器下就可以查看。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-构建为h5。只需将生成后的文件，放在我们的静态资源服务器下就可以查看。","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 构建为h5。只需将生成后的文件，放在我们的静态资源服务器下就可以查看。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/6/4/16b21cc30769a618?w=654&h=689&f=png&s=30519",alt:"cowAct"}})]),t._v(" "),s("h6",{attrs:{id:"_2-构建为微信小游戏，需要appid。并且，在小程序号中，设置为游戏类目。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-构建为微信小游戏，需要appid。并且，在小程序号中，设置为游戏类目。","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 构建为微信小游戏，需要AppID。并且，在小程序号中，设置为游戏类目。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/6/4/16b21ccfde89d2a7?w=654&h=689&f=png&s=1806128",alt:"cowAct"}})]),t._v(" "),s("p",[t._v("在微信开发工具里查看如图。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/6/4/16b21cc337e39c64?w=1323&h=684&f=png&s=75223",alt:"cowAct"}})]),t._v(" "),s("h2",{attrs:{id:"七、总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#七、总结","aria-hidden":"true"}},[t._v("#")]),t._v(" 七、总结")]),t._v(" "),s("p",[t._v("cocos creator集成的处理开发方案，不论是直接操作画面，或者是和js脚本的结合，都提供了便利。"),s("br"),t._v("\n最后，本次分享的主要目的是和大家一起认识Cocos Creator，了解它的工作流程，以及现在的用途。感兴趣的同学，可以继续了下进阶中的动画剪辑系统，碰撞检测系统，微信小游戏分包加载等。")]),t._v(" "),s("h2",{attrs:{id:"八、参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#八、参考","aria-hidden":"true"}},[t._v("#")]),t._v(" 八、参考")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://docs.cocos.com/creator/manual/zh/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Cocos Creator v2.0 用户手册"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://blog.csdn.net/i_dovelemon/article/details/25798677?tdsourcetag=s_pctim_aiomsg",target:"_blank",rel:"noopener noreferrer"}},[t._v("理解 组件-实体-系统 （ECS \\CES）游戏编程模型"),s("OutboundLink")],1)])])])},[],!1,null,null,null);a.default=e.exports}}]);